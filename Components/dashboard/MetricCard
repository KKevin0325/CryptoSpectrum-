import React from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { TrendingUp, TrendingDown } from "lucide-react";

export default function MetricCard({ 
  title, 
  value, 
  change, 
  changeType = "percentage", 
  icon: Icon, 
  color = "blue",
  badge,
  description 
}) {
  const isPositive = change > 0;
  const colorClasses = {
    blue: {
      bg: "from-blue-50 to-cyan-50",
      border: "border-blue-200/50",
      icon: "text-blue-500",
      accent: "text-blue-800"
    },
    green: {
      bg: "from-green-50 to-emerald-50", 
      border: "border-green-200/50",
      icon: "text-green-500",
      accent: "text-green-800"
    },
    purple: {
      bg: "from-purple-50 to-violet-50",
      border: "border-purple-200/50", 
      icon: "text-purple-500",
      accent: "text-purple-800"
    },
    orange: {
      bg: "from-orange-50 to-amber-50",
      border: "border-orange-200/50",
      icon: "text-orange-500", 
      accent: "text-orange-800"
    }
  };

  return (
    <Card className={`relative overflow-hidden bg-gradient-to-br ${colorClasses[color].bg} border ${colorClasses[color].border} hover:shadow-lg transition-all duration-300`}>
      <CardHeader className="pb-3">
        <div className="flex items-start justify-between">
          <div className="space-y-1">
            <CardTitle className="text-sm font-semibold text-slate-600">
              {title}
            </CardTitle>
            <div className="text-2xl font-bold text-slate-900">{value}</div>
            {description && (
              <p className="text-xs text-slate-500">{description}</p>
            )}
          </div>
          <div className="flex items-center gap-2">
            {badge && <Badge variant="secondary" className="text-xs">{badge}</Badge>}
            <div className={`p-2 rounded-xl bg-white/60 backdrop-blur-sm ${colorClasses[color].icon}`}>
              <Icon className="w-5 h-5" />
            </div>
          </div>
        </div>
      </CardHeader>
      
      {change !== undefined && (
        <CardContent className="pt-0">
          <div className="flex items-center gap-1 text-sm">
            {isPositive ? (
              <TrendingUp className="w-4 h-4 text-green-500" />
            ) : (
              <TrendingDown className="w-4 h-4 text-red-500" />
            )}
            <span className={isPositive ? "text-green-600" : "text-red-600"}>
              {isPositive ? "+" : ""}{change}{changeType === "percentage" ? "%" : ""}
            </span>
            <span className="text-slate-500">vs last period</span>
          </div>
        </CardContent>
      )}
    </Card>
  );
}

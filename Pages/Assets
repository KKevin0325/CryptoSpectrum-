
import React, { useState, useEffect } from "react";
import { Web3Asset } from "@/entities/Web3Asset";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { 
  Search, 
  TrendingUp, 
  TrendingDown, 
  Shield, 
  AlertTriangle,
  DollarSign,
  Activity,
  Plus
} from "lucide-react";
import { format } from "date-fns";

export default function Assets() {
  const [assets, setAssets] = useState([]);
  const [searchTerm, setSearchTerm] = useState("");
  const [filteredAssets, setFilteredAssets] = useState([]);

  useEffect(() => {
    loadAssets();
  }, []);

  useEffect(() => {
    let filtered = assets;
    
    if (searchTerm) {
      filtered = filtered.filter(asset => 
        asset.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
        asset.symbol.toLowerCase().includes(searchTerm.toLowerCase())
      );
    }
    
    setFilteredAssets(filtered);
  }, [assets, searchTerm]);

  const loadAssets = async () => {
    const data = await Web3Asset.list("-last_updated", 100);
    setAssets(data);
  };

  const getComplianceColor = (status) => {
    switch (status) {
      case 'compliant': return 'bg-green-100 text-green-700 border-green-200';
      case 'under_review': return 'bg-yellow-100 text-yellow-700 border-yellow-200';
      case 'non_compliant': return 'bg-red-100 text-red-700 border-red-200';
      default: return 'bg-gray-100 text-gray-700 border-gray-200';
    }
  };

  const getRiskColor = (score) => {
    if (score <= 30) return 'text-green-600';
    if (score <= 60) return 'text-yellow-600';
    if (score <= 80) return 'text-orange-600';
    return 'text-red-600';
  };

  const totalMarketCap = filteredAssets.reduce((sum, asset) => sum + (asset.market_cap || 0), 0);
  const totalVolume = filteredAssets.reduce((sum, asset) => sum + (asset.volume_24h || 0), 0);
  const avgRiskScore = filteredAssets.length > 0 
    ? filteredAssets.reduce((sum, asset) => sum + (asset.risk_score || 0), 0) / filteredAssets.length 
    : 0;

  return (
    <div className="p-6 lg:p-8 space-y-8 bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50 min-h-screen">
      {/* Header */}
      <div className="flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4">
        <div>
          <h1 className="text-3xl lg:text-4xl font-bold text-slate-900 mb-2">
            Asset Monitoring
          </h1>
          <p className="text-slate-600 text-lg">
            Track performance, compliance, and risk across your Web3 portfolio
          </p>
        </div>
        
        <div className="flex gap-3">
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400 w-4 h-4" />
            <Input
              placeholder="Search assets..."
              value={searchTerm}
              onChange={(e) => setSearchTerm(e.target.value)}
              className="pl-10 w-64 bg-white/80 backdrop-blur-sm border-slate-200/60"
            />
          </div>
          <Button className="bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-700 hover:to-cyan-700">
            <Plus className="w-4 h-4 mr-2" />
            Add Asset
          </Button>
        </div>
      </div>

      {/* Summary Cards */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <Card className="bg-gradient-to-br from-green-50 to-emerald-50 border-green-200/50">
          <CardHeader className="pb-3">
            <div className="flex items-center justify-between">
              <CardTitle className="text-lg">Total Market Cap</CardTitle>
              <DollarSign className="w-6 h-6 text-green-500" />
            </div>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-green-800">
              ${(totalMarketCap / 1e9).toFixed(2)}B
            </div>
            <div className="flex items-center gap-1 text-sm text-green-600 mt-1">
              <TrendingUp className="w-4 h-4" />
              <span>+5.2% this week</span>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-blue-50 to-cyan-50 border-blue-200/50">
          <CardHeader className="pb-3">
            <div className="flex items-center justify-between">
              <CardTitle className="text-lg">24h Volume</CardTitle>
              <Activity className="w-6 h-6 text-blue-500" />
            </div>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-blue-800">
              ${(totalVolume / 1e9).toFixed(2)}B
            </div>
            <div className="flex items-center gap-1 text-sm text-blue-600 mt-1">
              <TrendingUp className="w-4 h-4" />
              <span>+12.8% vs yesterday</span>
            </div>
          </CardContent>
        </Card>

        <Card className="bg-gradient-to-br from-purple-50 to-violet-50 border-purple-200/50">
          <CardHeader className="pb-3">
            <div className="flex items-center justify-between">
              <CardTitle className="text-lg">Avg Risk Score</CardTitle>
              <Shield className="w-6 h-6 text-purple-500" />
            </div>
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-purple-800">
              {avgRiskScore.toFixed(0)}/100
            </div>
            <div className="flex items-center gap-1 text-sm text-purple-600 mt-1">
              <TrendingDown className="w-4 h-4" />
              <span>-2.1% improvement</span>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Assets Table */}
      <Card className="bg-white/80 backdrop-blur-sm border-slate-200/60">
        <CardHeader>
          <CardTitle className="text-xl">Asset Portfolio</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="overflow-x-auto">
            <Table>
              <TableHeader>
                <TableRow className="bg-slate-50/80">
                  <TableHead className="font-semibold">Asset</TableHead>
                  <TableHead className="font-semibold">Price</TableHead>
                  <TableHead className="font-semibold">24h Change</TableHead>
                  <TableHead className="font-semibold">Market Cap</TableHead>
                  <TableHead className="font-semibold">Volume</TableHead>
                  <TableHead className="font-semibold">Compliance</TableHead>
                  <TableHead className="font-semibold">Risk Score</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {filteredAssets.length > 0 ? (
                  filteredAssets.map((asset) => (
                    <TableRow key={asset.id} className="hover:bg-slate-50/50 transition-colors">
                      <TableCell>
                        <div>
                          <div className="font-medium text-slate-900">{asset.name}</div>
                          <div className="text-sm text-slate-500">{asset.symbol}</div>
                        </div>
                      </TableCell>
                      <TableCell className="font-medium">
                        ${asset.current_price?.toLocaleString() || 'N/A'}
                      </TableCell>
                      <TableCell>
                        <div className={`flex items-center gap-1 ${
                          (asset.price_change_24h || 0) >= 0 ? 'text-green-600' : 'text-red-600'
                        }`}>
                          {(asset.price_change_24h || 0) >= 0 ? (
                            <TrendingUp className="w-4 h-4" />
                          ) : (
                            <TrendingDown className="w-4 h-4" />
                          )}
                          <span className="font-medium">
                            {(asset.price_change_24h || 0) >= 0 ? '+' : ''}{(asset.price_change_24h || 0).toFixed(2)}%
                          </span>
                        </div>
                      </TableCell>
                      <TableCell>
                        ${(asset.market_cap / 1e9).toFixed(2)}B
                      </TableCell>
                      <TableCell>
                        ${(asset.volume_24h / 1e6).toFixed(1)}M
                      </TableCell>
                      <TableCell>
                        <Badge className={getComplianceColor(asset.compliance_status)}>
                          {asset.compliance_status || 'unknown'}
                        </Badge>
                      </TableCell>
                      <TableCell>
                        <div className="flex items-center gap-2">
                          <span className={`font-medium ${getRiskColor(asset.risk_score || 0)}`}>
                            {asset.risk_score || 0}/100
                          </span>
                          {(asset.risk_score || 0) > 70 && (
                            <AlertTriangle className="w-4 h-4 text-orange-500" />
                          )}
                        </div>
                      </TableCell>
                    </TableRow>
                  ))
                ) : (
                  <TableRow>
                    <TableCell colSpan={7} className="text-center py-8">
                      <div className="space-y-2">
                        <AlertTriangle className="w-8 h-8 text-slate-400 mx-auto" />
                        <p className="text-slate-500">No assets found</p>
                        {searchTerm && (
                          <p className="text-sm text-slate-400">
                            Try adjusting your search criteria
                          </p>
                        )}
                      </div>
                    </TableCell>
                  </TableRow>
                )}
              </TableBody>
            </Table>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
